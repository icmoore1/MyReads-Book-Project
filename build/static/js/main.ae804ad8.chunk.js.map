{"version":3,"sources":["BooksAPI.js","components/Book.js","components/Shelf.js","components/pages/MainPage.js","components/pages/SearchPage.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","Book","_this","this","react_default","a","createElement","className","style","width","height","backgroundImage","props","imageLinks","thumbnail","value","onChange","e","bookUpdater","target","disabled","title","authors","React","Component","Shelf","name","map","key","components_Book","MainPage","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","BooksAPI","resp","setState","state","filter","b","_this2","components_Shelf","Link","to","searchPage","updateQuery","query","submitSearch","results","_this3","undefined","trim","error","forEach","f","B","_this4","type","placeholder","event","BooksApp","Route","exact","path","component","SearchPage","ReactDOM","render","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ae804ad8.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react';\r\n\r\n\r\nclass Book extends React.Component {\r\n  //  componentDidMount() {\r\n  //  console.log(this);\r\n  //  }\r\n\r\n\r\n  render() {\r\n      return (\r\n         <li>\r\n         <div className=\"book\">\r\n           <div className=\"book-top\">\r\n             <div className=\"book-cover\" style={{ width: 128, height: 192, backgroundImage: `url(\"${this.props.book.imageLinks ? this.props.book.imageLinks.thumbnail : \"\"}\")` }}></div>\r\n             <div className=\"book-shelf-changer\">\r\n               <select value={this.props.book.shelf || \"none\"} onChange={(e) => (this.props.bookUpdater(this.props.book, e.target.value) )}>\r\n                 <option value=\"move\" disabled>Move to...</option>\r\n                 <option value=\"currentlyReading\">Current Reads</option>\r\n                 <option value=\"wantToRead\">Want to Read</option>\r\n                 <option value=\"read\">Read</option>\r\n                 <option value=\"none\">None</option>\r\n               </select>\r\n             </div>\r\n           </div>\r\n           <div className=\"book-title\">{this.props.book.title}</div>\r\n           <div className=\"book-authors\">{this.props.book.authors ? this.props.book.authors[0] : \"Author Not Found\"}</div>\r\n         </div>\r\n       </li>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Book;\r\n","import React from 'react';\r\nimport Book from './Book';\r\n\r\n\r\n\r\nclass Shelf extends React.Component {\r\n//  componentDidMount() {\r\n//    console.log(this);\r\n//  }\r\n   render() {\r\n      return (\r\n       <div className=\"bookshelf\">\r\n        <h2 className=\"bookshelf-title\">{this.props.name}</h2>\r\n        <div className=\"bookshelf-books\">\r\n          <ol className=\"books-grid\">\r\n            {\r\n              this.props.book.map((book, key) => <Book bookUpdater={this.props.bookUpdater}  book={book} key={key} />)\r\n            }\r\n          </ol>\r\n        </div>\r\n      </div>\r\n      );\r\n   }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Shelf;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport * as BooksAPI from '../../BooksAPI'\r\n\r\nimport Shelf from '../Shelf';\r\n\r\nclass MainPage extends React.Component {\r\n  constructor(props) {\r\n       super(props);\r\n       this.state = {\r\n          books: []\r\n       }\r\n    }\r\n\r\n    componentDidMount() {\r\n       BooksAPI.getAll()\r\n       .then(resp => {\r\n        // console.log(resp); //books\r\n          this.setState({books:resp});\r\n       })\r\n    }\r\n\r\n    bookUpdater = (book, shelf) => {\r\n       BooksAPI.update(book, shelf)\r\n       .then(resp => {\r\n          book.shelf = shelf;\r\n        //  console.log(book.shelf);\r\n          this.setState(state => ({\r\n             books: state.books.filter(b => b.id !== book.id).concat(book)\r\n          }))\r\n       })\r\n     }\r\n\r\n    render() {\r\n       return (\r\n          <div className=\"list-books\">\r\n             <div className=\"list-books-title\">\r\n               <h1>MyReads</h1>\r\n             </div>\r\n             <div className=\"list-books-content\">\r\n               <div>\r\n                 <Shelf bookUpdater={this.bookUpdater} name=\"Currently Reading\" book={this.state.books.filter(b => b.shelf === \"currentlyReading\")} />\r\n                 <Shelf bookUpdater={this.bookUpdater} name=\"Want To Read\" book={this.state.books.filter(b => b.shelf === \"wantToRead\")} />\r\n                 <Shelf bookUpdater={this.bookUpdater} name=\"Read\" book={this.state.books.filter(b => b.shelf === \"read\")} />\r\n               </div>\r\n             </div>\r\n             <div className=\"open-search\">\r\n               <Link to=\"/search\">Add a book</Link>\r\n             </div>\r\n           </div>\r\n       );\r\n    }\r\n }\r\n\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport * as BooksAPI from '../../BooksAPI'\r\nimport Book from '../Book';\r\n\r\nclass searchPage extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         books: [],\r\n         results: [],\r\n         query: \"\"\r\n      }\r\n   }\r\n\r\n   componentDidMount() {\r\n      BooksAPI.getAll()\r\n      .then(resp => {\r\n         this.setState({books:resp});\r\n      })\r\n   }\r\n\r\n   updateQuery = (query) => {\r\n      this.setState({query: query}, this.submitSearch);\r\n   }\r\n\r\n\r\n   submitSearch() {\r\n      if(this.state.query === '' || this.state.query === undefined) {\r\n         return this.setState({ results: [] })\r\n      }\r\n      BooksAPI.search(this.state.query.trim()).then(res => {\r\n         if(res.error) {\r\n            return this.setState({results: [] })\r\n         }\r\n         else {\r\n            res.forEach(b => {\r\n               let f = this.state.books.filter(B => B.id === b.id)\r\n            //   console.log(f);\r\n               if(f[0]) { b.shelf = f[0].shelf }\r\n            });\r\n            return this.setState({results: res })\r\n         }\r\n      })\r\n   }\r\n\r\n   bookUpdater = (book, shelf) => {\r\n      BooksAPI.update(book, shelf)\r\n      .then(resp => {\r\n         book.shelf = shelf;\r\n         this.setState(state => ({\r\n            books: state.books.filter(b => b.id !== book.id).concat({book})\r\n         }))\r\n      })\r\n    }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n              <Link className=\"close-search\" to=\"/\">Close</Link>\r\n              <div className=\"search-books-input-wrapper\">\r\n              <input type=\"text\" placeholder=\"Search by title or author\" value={this.state.query}\r\n                onChange={(event) => this.updateQuery(event.target.value)} />\r\n              </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n              <ol className=\"books-grid\">\r\n              {\r\n                 this.state.results.map((book, key) => <Book bookUpdater={this.bookUpdater} book={book} key={key} />)\r\n              }\r\n              </ol>\r\n            </div>\r\n          </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default searchPage;\r\n","import React from 'react'\r\n// import * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport { Route } from 'react-router-dom'\r\nimport MainPage from './components/pages/MainPage';\r\nimport SearchPage from './components/pages/SearchPage';\r\n\r\nclass BooksApp extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n       <Route exact path=\"/\" component={ MainPage } />\r\n       <Route exact path=\"/search\" component={ SearchPage } />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport {BrowserRouter} from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter> ,\r\n    document.getElementById('root')\r\n   )\r\n"],"sourceRoot":""}